package com.patiance.card;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Deck {

	long successSeeds[] = new long[] {
			1691324261626l,
			1691324261487l,
			1691324261654l,
			1691324261692l,
			1691324261758l,
			1691324261779l,
			1691324261799l,
			1691324261935l,
			1691324262260l,
			1691324262334l,
			1691324262346l,
			1691324262382l,
			1691324262535l,
			1691324262689l,
			1691324262701l,
			1691324262799l,
			1691324262862l,
			1691324262991l,
			1691324263416l,
			1691324263535l,
			1691324263540l,
			1691324263663l,
			1691324264554l,
			1691324264657l,
			1691324265467l,
			1691324265546l,
			1691324265750l,
			1691324265758l,
			1691324266311l,
			1691324266428l,
			1691324266448l,
			1691324266469l,
			1691324266546l,
			1691324266746l,
			1691324266818l,
			1691324266982l,
			1691324267008l,
			1691324267038l,
			1691324267144l,
			1691324267239l,
			1691324267285l,
			1691324267751l,
			1691324267945l,
			1691324268142l,
			1691324268152l,
			1691324268278l,
			1691324268311l,
			1691324268878l,
			1691324268919l,
			1691324269346l,
			1691324269351l,
			1691324269477l,
			1691324269557l,
			1691324269871l,
			1691324270048l,
			1691324270057l,
			1691324270133l,
			1691324270177l,
			1691324270184l,
			1691324270249l,
			1691324270390l,
			1691324270487l,
			1691324270515l,
			1691324270727l,
			1691324270733l,
			1691324270869l,
			1691324270995l,
			1691324271516l,
			1691324271522l,
			1691324271821l,
			1691324271905l,
			1691324272091l,
			1691324272140l,
			1691324272152l,
			1691324272419l,
			1691324272708l,
			1691324272910l,
			1691324272971l,
			1691324273477l,
			1691324273546l,
			1691324274331l,
			1691324274597l,
			1691324275024l,
			1691324275817l,
			1691324276040l,
			1691324276302l,
			1691324276626l,
			1691324276638l,
			1691324276755l,
			1691324276798l,
			1691324277111l,
			1691324277119l,
			1691324277748l,
			1691324277941l,
			1691324278165l,
			1691324278197l,
			1691324278199l,
			1691324278215l,
			1691324278379l,
			1691324278429l,
			1691324278677l,
			1691324278756l,
			1691324278919l,
			1691324279035l,
			1691324279106l,
			1691324279506l,
			1691324279604l,
			1691324279886l,
			1691324279923l,
			1691324280037l,
			1691324280556l,
			1691324280643l,
			1691324280645l,
			1691324280735l,
			1691324280781l,
			1691324280822l,
			1691324281019l,
			1691324281027l,
			1691324281193l,
			1691324281327l,
			1691324281418l,
			1691324281459l,
			1691324281504l,
			1691324281900l,
			1691324282130l,
			1691324282355l,
			1691324282548l,
			1691324282599l,
			1691324282759l,
			1691324282814l,
			1691324282958l,
			1691324283021l,
			1691324283553l,
			1691324283629l,
			1691324283799l,
			1691324284048l,
			1691324284238l,
			1691324284276l,
			1691324284580l,
			1691324284591l,
			1691324284635l,
			1691324284839l,
			1691324285549l,
			1691324285655l,
			1691324285939l,
			1691324286012l,
			1691324286097l,
			1691324286247l,
			1691324287478l,
			1691324287552l,
			1691324287762l,
			1691324288034l,
			1691324288037l,
			1691324288229l,
			1691324288455l,
			1691324288713l,
			1691324288744l,
			1691324288928l,
			1691324289050l,
			1691324289051l,
			1691324289491l,
			1691324289773l,
			1691324289878l,
			1691324289992l,
			1691324290377l,
			1691324290917l,
			1691324291231l,
			1691324291587l,
			1691324291707l,
			1691324291886l,
			1691324291892l,
			1691324292019l,
			1691324292256l,
			1691324292567l,
			1691324292959l,
			1691324293025l,
			1691324293469l,
			1691324294193l,
			1691324294400l,
			1691324294428l,
			1691324294588l,
			1691324295146l,
			1691324295234l,
			1691324295538l,
			1691324295822l,
			1691324296063l,
			1691324296173l,
			1691324296738l,
			1691324296743l,
			1691324296940l,
			1691324297173l,
			1691324297531l,
			1691324297556l,
			1691324297794l,
			1691324298026l,
			1691324298188l,
			1691324298411l,
			1691324298430l,
			1691324299055l,
			1691324299107l,
			1691324299423l,
			1691324299750l,
			1691324299834l,
			1691324299886l,
			1691324299901l,
			1691324300028l,
			1691324300072l,
			1691324300269l,
			1691324301183l,
			1691324301212l,
			1691324301485l,
			1691324301550l,
			1691324301640l,
			1691324301782l,
			1691324302073l,
			1691324302725l,
			1691324303189l,
			1691324303622l,
			1691324303726l,
			1691324304045l,
			1691324304050l,
			1691324304065l,
			1691324304096l,
			1691324304275l,
			1691324304707l,
			1691324304890l,
			1691324305137l,
			1691324305145l,
			1691324305203l,
			1691324305300l,
			1691324305929l,
			1691324306179l,
			1691324306281l,
			1691324306315l,
			1691324306384l,
			1691324306754l,
			1691324306932l,
			1691324307040l,
			1691324307299l,
			1691324307445l,
			1691324307482l,
			1691324307629l,
			1691324307631l,
			1691324307661l,
			1691324307995l,
			1691324308025l,
			1691324308071l,
			1691324308078l,
			1691324308094l,
			1691324308164l,
			1691324308286l,
			1691324308380l,
			1691324308676l,
			1691324308682l,
			1691324308752l,
			1691324309067l,
			1691324309591l,
			1691324309627l,
			1691324310005l,
			1691324310125l,
			1691324310248l,
			1691324310271l,
			1691324310285l,
			1691324310500l,
			1691324310609l,
			1691324310805l,
			1691324310832l,
			1691324311087l,
			1691324311092l,
			1691324311219l,
			1691324311496l,
			1691324311510l,
			1691324311813l,
			1691324312451l,
			1691324313252l,
			1691324313459l,
			1691324313520l,
			1691324313621l,
			1691324313965l,
			1691324314028l,
			1691324314051l,
			1691324314145l,
			1691324314304l,
			1691324314465l,
			1691324314680l,
			1691324314920l,
			1691324315068l,
			1691324315134l,
			1691324315714l,
			1691324315727l,
			1691324315782l,
			1691324315792l,
			1691324315829l,
			1691324316027l,
			1691324316052l,
			1691324316184l,
			1691324316370l,
			1691324316384l,
			1691324316589l,
			1691324316635l,
			1691324316742l,
			1691324316809l,
			1691324316886l,
			1691324316962l,
			1691324316964l,
			1691324317039l,
			1691324317070l,
			1691324317205l,
			1691324317555l,
			1691324317783l,
			1691324317979l,
			1691324318182l,
			1691324318196l,
			1691324318324l,
			1691324318860l,
			1691324318891l,
			1691324318939l,
			1691324319182l,
			1691324319776l,
			1691324320213l,
			1691324320331l,
			1691324320601l,
			1691324320862l,
			1691324321156l,
			1691324321455l,
			1691324321577l,
			1691324321959l,
			1691324322085l,
			1691324322186l,
			1691324322248l,
			1691324322565l,
			1691324322686l,
			1691324322766l,
			1691324322901l,
			1691324323025l,
			1691324323027l,
			1691324323038l,
			1691324323152l,
			1691324323274l,
			1691324323462l,
			1691324324036l,
			1691324324226l,
			1691324324410l,
			1691324324566l,
			1691324324667l,
			1691324324834l,
			1691324325024l,
			1691324325046l,
			1691324325112l,
			1691324325372l,
			1691324325429l,
			1691324325519l,
			1691324325550l,
			1691324325587l,
			1691324325625l,
			1691324325794l,
			1691324326201l,
			1691324326415l,
			1691324326509l,
			1691324326608l,
			1691324326647l,
			1691324326738l,
			1691324326748l,
			1691324327264l,
			1691324327289l,
			1691324327624l,
			1691324327919l,
			1691324328053l,
			1691324328064l,
			1691324328173l,
			1691324328746l,
			1691324328769l,
			1691324328870l,
			1691324328876l,
			1691324328917l,
			1691324328957l,
			1691324329522l,
			1691324329553l,
			1691324329704l,
			1691324329939l,
			1691324329945l,
			1691324329971l,
			1691324330126l,
			1691324330212l,
			1691324330497l,
			1691324330518l,
			1691324330757l,
			1691324330774l,
			1691324330775l,
			1691324331014l,
			1691324331054l,
			1691324331066l,
			1691324331096l,
			1691324331438l,
			1691324331628l,
			1691324331631l,
			1691324332037l,
			1691324332313l,
			1691324332405l,
			1691324332537l,
			1691324332777l,
			1691324333395l,
			1691324333789l,
			1691324334748l,
			1691324334814l,
			1691324334880l,
			1691324334892l,
			1691324334973l,
			1691324335005l,
			1691324335612l,
			1691324335725l,
			1691324335907l,
			1691324335919l,
			1691324335979l,
			1691324336030l,
			1691324336055l,
			1691324336063l,
			1691324336101l,
			1691324336184l,
			1691324336197l,
			1691324336307l,
			1691324336329l,
			1691324336519l,
			1691324336747l,
			1691324336793l,
			1691324337152l,
			1691324337173l,
			1691324337459l,
			1691324337811l,
			1691324338334l,
			1691324338457l,
			1691324338828l,
			1691324338976l,
			1691324339035l,
			1691324339250l,
			1691324339292l,
			1691324339677l,
			1691324339715l,
			1691324339976l,
			1691324340030l,
			1691324340157l,
			1691324340189l,
			1691324340248l,
			1691324340456l,
			1691324340563l,
			1691324340715l,
			1691324341238l,
			1691324341439l,
			1691324341715l,
			1691324341825l,
			1691324341846l,
			1691324342005l,
			1691324342178l,
			1691324342305l,
			1691324342315l,
			1691324342404l,
			1691324342429l,
			1691324342497l,
			1691324342506l,
			1691324342531l,
			1691324342538l,
			1691324342655l,
			1691324342870l,
			1691324343350l,
			1691324343482l,
			1691324343522l,
			1691324343911l,
			1691324344143l,
			1691324344225l,
			1691324344337l,
			1691324344717l,
			1691324344875l,
			1691324344938l,
			1691324345083l,
			1691324345244l,
			1691324345308l,
			1691324345458l,
			1691324345884l,
			1691324345886l,
			1691324346300l,
			1691324346606l,
			1691324346640l,
			1691324346938l,
			1691324347178l,
			1691324347528l,
			1691324347572l,
			1691324347573l,
			1691324347807l,
			1691324347886l,
			1691324347888l,
			1691324348070l,
			1691324348095l,
			1691324348220l,
			1691324348274l,
			1691324348463l,
			1691324348609l,
			1691324348780l,
			1691324349182l,
			1691324349212l,
			1691324349378l,
			1691324349381l,
			1691324349566l,
			1691324349795l,
			1691324349841l,
			1691324349945l,
			1691324350266l,
			1691324350280l,
			1691324350539l,
			1691324351069l,
			1691324351334l,
			1691324351410l,
			1691324351494l,
			1691324351590l,
			1691324351666l,
			1691324351792l,
			1691324351955l,
			1691324352050l,
			1691324352360l,
			1691324352368l,
			1691324352460l,
			1691324352546l,
			1691324353625l,
			1691324353729l,
			1691324353933l,
			1691324354168l,
			1691324354669l,
			1691324354748l,
			1691324355133l,
			1691324355294l,
			1691324355356l,
			1691324355671l,
			1691324355735l,
			1691324355788l,
			1691324355983l,
			1691324356088l,
			1691324356405l,
			1691324356628l,
			1691324356688l,
			1691324356887l,
			1691324356957l,
			1691324357278l,
			1691324357455l,
			1691324358139l,
			1691324358183l,
			1691324358371l,
			1691324358421l,
			1691324358580l,
			1691324358703l,
			1691324358770l,
			1691324358790l,
			1691324358827l,
			1691324358906l,
			1691324359182l,
			1691324359336l,
			1691324359346l,
			1691324359580l,
			1691324359723l,
			1691324359952l,
			1691324360005l,
			1691324360449l,
			1691324360628l,
			1691324360699l,
			1691324360988l,
			1691324361440l,
			1691324361494l };

	private static List<Card> allCards = new ArrayList<>();
	private static List<Card> allCardsAcesHigh = new ArrayList<>();
	private List<Card> cards;
	private final long seed;
	private static long noise = 1;

	static {
		for (int i = 1; i < 14; ++i) {
			for (Suit suit : Suit.values()) {
				allCards.add(new Card(i, suit));
			}
		}
		for (int i = 2; i < 15; ++i) {
			for (Suit suit : Suit.values()) {
				allCardsAcesHigh.add(new Card(i, suit));
			}
		}
	}

	static int index = 0;

	public Deck(List<Card> cards) {
		this.seed = System.currentTimeMillis() + noise;
		//Random random = new Random(getSeed());
		//int index = random.nextInt(successSeeds.length);
		//this.seed = successSeeds[index++];

		noise++;
		this.cards = new ArrayList<>();
		for (Card card : cards) {
			this.cards.add(new Card(card.getRank(), card.getSuit()));
		}
	}

	public Deck(Deck deck) {
		this.seed = deck.getSeed();
		this.cards = new ArrayList<>();
		for (Card card : deck.cards) {
			this.cards.add(new Card(card.getRank(), card.getSuit()));
		}
	}

	public long getSeed() {
		return seed;
	}

	public boolean isEmpty() {
		return cards.size() == 0;
	}

	public Card pickCard() {
		return cards.remove(0);
	}

	public List<Card> getCards() {
		return cards;
	}

	public static Deck randomStandardDeck() {
		Deck deck = new Deck(allCards);
		deck.shuffle();
		return deck;
	}

	public static Deck randomStandardDeckAcesHigh() {
		Deck deck = new Deck(allCardsAcesHigh);
		deck.shuffle();
		return deck;
	}

	private void shuffle() {
		Random random = new Random(getSeed());
		List<Card> shuffledCards = new ArrayList<>();
		while (cards.size() > 0) {
			int index = random.nextInt(cards.size());
			shuffledCards.add(cards.remove(index));
		}
		cards = shuffledCards;
	}

	public void print() {
		for (Card card : cards) {
			System.out.println(".---.");
			String rank = card.getPrintableRank();
			System.out.println("|" + rank + (rank.length() > 1 ? " |" : "  |"));
			System.out.println("| " + card.getPrintableSuit() + " |");
			System.out.println("'---'");
		}
	}
}
